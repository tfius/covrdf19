// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using covrd.Model;

namespace covrd.Migrations
{
    [DbContext(typeof(PapContext))]
    [Migration("20200321135813_v1")]
    partial class v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("covrd.Model.Abstract", b =>
                {
                    b.Property<long>("AbstractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("PaperId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PaperId1")
                        .HasColumnType("bigint");

                    b.Property<string>("Section")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("ntext");

                    b.HasKey("AbstractId");

                    b.HasIndex("PaperId");

                    b.HasIndex("PaperId1");

                    b.ToTable("Abstract");
                });

            modelBuilder.Entity("covrd.Model.Affiliation", b =>
                {
                    b.Property<long>("AffiliationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Institution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Laboratory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("LocationId")
                        .HasColumnType("bigint");

                    b.HasKey("AffiliationId");

                    b.HasIndex("LocationId");

                    b.ToTable("Affiliation");
                });

            modelBuilder.Entity("covrd.Model.BibEntries", b =>
                {
                    b.Property<long>("BibEntriesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Bibref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Bibref10Bibref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Bibref11Bibref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Bibref12Bibref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Bibref13Bibref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Bibref14Bibref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Bibref15Bibref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Bibref16Bibref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Bibref1Bibref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Bibref2Bibref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Bibref3Bibref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Bibref4Bibref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Bibref5Bibref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Bibref6Bibref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Bibref7Bibref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Bibref8Bibref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Bibref9Bibref0Id")
                        .HasColumnType("bigint");

                    b.HasKey("BibEntriesId");

                    b.HasIndex("Bibref0Id");

                    b.HasIndex("Bibref10Bibref0Id");

                    b.HasIndex("Bibref11Bibref0Id");

                    b.HasIndex("Bibref12Bibref0Id");

                    b.HasIndex("Bibref13Bibref0Id");

                    b.HasIndex("Bibref14Bibref0Id");

                    b.HasIndex("Bibref15Bibref0Id");

                    b.HasIndex("Bibref16Bibref0Id");

                    b.HasIndex("Bibref1Bibref0Id");

                    b.HasIndex("Bibref2Bibref0Id");

                    b.HasIndex("Bibref3Bibref0Id");

                    b.HasIndex("Bibref4Bibref0Id");

                    b.HasIndex("Bibref5Bibref0Id");

                    b.HasIndex("Bibref6Bibref0Id");

                    b.HasIndex("Bibref7Bibref0Id");

                    b.HasIndex("Bibref8Bibref0Id");

                    b.HasIndex("Bibref9Bibref0Id");

                    b.ToTable("BibEntries");
                });

            modelBuilder.Entity("covrd.Model.Bibref0", b =>
                {
                    b.Property<long>("Bibref0Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Issn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Venue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Volume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Year")
                        .HasColumnType("bigint");

                    b.HasKey("Bibref0Id");

                    b.ToTable("Bibref0");
                });

            modelBuilder.Entity("covrd.Model.Comment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PaperId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PaperId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("covrd.Model.Location", b =>
                {
                    b.Property<long>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Settlement")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationId");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("covrd.Model.Metadata", b =>
                {
                    b.Property<long>("MetadataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MetadataId");

                    b.ToTable("Metadatas");
                });

            modelBuilder.Entity("covrd.Model.MetadataAuthor", b =>
                {
                    b.Property<long>("MetadataAuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AffiliationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("Bibref0Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("First")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MetadataId")
                        .HasColumnType("bigint");

                    b.Property<string>("Suffix")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MetadataAuthorId");

                    b.HasIndex("AffiliationId");

                    b.HasIndex("Bibref0Id");

                    b.HasIndex("MetadataId");

                    b.ToTable("MetadataAuthor");
                });

            modelBuilder.Entity("covrd.Model.MetadataOverview", b =>
                {
                    b.Property<string>("MetadataOverviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Abstract")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Authors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Doi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HasFullText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Journal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("License")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Msapid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pmcid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Publish_time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pubmed_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source_x")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Whocovid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sha")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MetadataOverviewId");

                    b.ToTable("MetadataOverviews");
                });

            modelBuilder.Entity("covrd.Model.Paper", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BibEntriesId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MetadataId")
                        .HasColumnType("bigint");

                    b.Property<string>("PaperId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("RefEntriesId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BibEntriesId");

                    b.HasIndex("MetadataId");

                    b.HasIndex("RefEntriesId");

                    b.ToTable("Papers");
                });

            modelBuilder.Entity("covrd.Model.Ref0", b =>
                {
                    b.Property<long>("Ref0Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Ref0Id");

                    b.ToTable("Ref0");
                });

            modelBuilder.Entity("covrd.Model.RefEntries", b =>
                {
                    b.Property<long>("RefEntriesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Figref0Ref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Figref10Ref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Figref1Ref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Figref2Ref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Figref3Ref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Figref4Ref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Figref5Ref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Figref6Ref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Figref7Ref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Figref8Ref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Figref9Ref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Tabref0Ref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Tabref10Ref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Tabref11Ref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Tabref12Ref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Tabref1Ref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Tabref2Ref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Tabref3Ref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Tabref4Ref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Tabref5Ref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Tabref6Ref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Tabref7Ref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Tabref8Ref0Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("Tabref9Ref0Id")
                        .HasColumnType("bigint");

                    b.HasKey("RefEntriesId");

                    b.HasIndex("Figref0Ref0Id");

                    b.HasIndex("Figref10Ref0Id");

                    b.HasIndex("Figref1Ref0Id");

                    b.HasIndex("Figref2Ref0Id");

                    b.HasIndex("Figref3Ref0Id");

                    b.HasIndex("Figref4Ref0Id");

                    b.HasIndex("Figref5Ref0Id");

                    b.HasIndex("Figref6Ref0Id");

                    b.HasIndex("Figref7Ref0Id");

                    b.HasIndex("Figref8Ref0Id");

                    b.HasIndex("Figref9Ref0Id");

                    b.HasIndex("Tabref0Ref0Id");

                    b.HasIndex("Tabref10Ref0Id");

                    b.HasIndex("Tabref11Ref0Id");

                    b.HasIndex("Tabref12Ref0Id");

                    b.HasIndex("Tabref1Ref0Id");

                    b.HasIndex("Tabref2Ref0Id");

                    b.HasIndex("Tabref3Ref0Id");

                    b.HasIndex("Tabref4Ref0Id");

                    b.HasIndex("Tabref5Ref0Id");

                    b.HasIndex("Tabref6Ref0Id");

                    b.HasIndex("Tabref7Ref0Id");

                    b.HasIndex("Tabref8Ref0Id");

                    b.HasIndex("Tabref9Ref0Id");

                    b.ToTable("RefEntries");
                });

            modelBuilder.Entity("covrd.Model.Span", b =>
                {
                    b.Property<long>("SpanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AbstractId")
                        .HasColumnType("bigint");

                    b.Property<long?>("AbstractId1")
                        .HasColumnType("bigint");

                    b.Property<long>("End")
                        .HasColumnType("bigint");

                    b.Property<string>("RefId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Start")
                        .HasColumnType("bigint");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SpanId");

                    b.HasIndex("AbstractId");

                    b.HasIndex("AbstractId1");

                    b.ToTable("Span");
                });

            modelBuilder.Entity("covrd.Model.Abstract", b =>
                {
                    b.HasOne("covrd.Model.Paper", null)
                        .WithMany("Abstract")
                        .HasForeignKey("PaperId");

                    b.HasOne("covrd.Model.Paper", null)
                        .WithMany("BodyText")
                        .HasForeignKey("PaperId1");
                });

            modelBuilder.Entity("covrd.Model.Affiliation", b =>
                {
                    b.HasOne("covrd.Model.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");
                });

            modelBuilder.Entity("covrd.Model.BibEntries", b =>
                {
                    b.HasOne("covrd.Model.Bibref0", "Bibref0")
                        .WithMany()
                        .HasForeignKey("Bibref0Id");

                    b.HasOne("covrd.Model.Bibref0", "Bibref10")
                        .WithMany()
                        .HasForeignKey("Bibref10Bibref0Id");

                    b.HasOne("covrd.Model.Bibref0", "Bibref11")
                        .WithMany()
                        .HasForeignKey("Bibref11Bibref0Id");

                    b.HasOne("covrd.Model.Bibref0", "Bibref12")
                        .WithMany()
                        .HasForeignKey("Bibref12Bibref0Id");

                    b.HasOne("covrd.Model.Bibref0", "Bibref13")
                        .WithMany()
                        .HasForeignKey("Bibref13Bibref0Id");

                    b.HasOne("covrd.Model.Bibref0", "Bibref14")
                        .WithMany()
                        .HasForeignKey("Bibref14Bibref0Id");

                    b.HasOne("covrd.Model.Bibref0", "Bibref15")
                        .WithMany()
                        .HasForeignKey("Bibref15Bibref0Id");

                    b.HasOne("covrd.Model.Bibref0", "Bibref16")
                        .WithMany()
                        .HasForeignKey("Bibref16Bibref0Id");

                    b.HasOne("covrd.Model.Bibref0", "Bibref1")
                        .WithMany()
                        .HasForeignKey("Bibref1Bibref0Id");

                    b.HasOne("covrd.Model.Bibref0", "Bibref2")
                        .WithMany()
                        .HasForeignKey("Bibref2Bibref0Id");

                    b.HasOne("covrd.Model.Bibref0", "Bibref3")
                        .WithMany()
                        .HasForeignKey("Bibref3Bibref0Id");

                    b.HasOne("covrd.Model.Bibref0", "Bibref4")
                        .WithMany()
                        .HasForeignKey("Bibref4Bibref0Id");

                    b.HasOne("covrd.Model.Bibref0", "Bibref5")
                        .WithMany()
                        .HasForeignKey("Bibref5Bibref0Id");

                    b.HasOne("covrd.Model.Bibref0", "Bibref6")
                        .WithMany()
                        .HasForeignKey("Bibref6Bibref0Id");

                    b.HasOne("covrd.Model.Bibref0", "Bibref7")
                        .WithMany()
                        .HasForeignKey("Bibref7Bibref0Id");

                    b.HasOne("covrd.Model.Bibref0", "Bibref8")
                        .WithMany()
                        .HasForeignKey("Bibref8Bibref0Id");

                    b.HasOne("covrd.Model.Bibref0", "Bibref9")
                        .WithMany()
                        .HasForeignKey("Bibref9Bibref0Id");
                });

            modelBuilder.Entity("covrd.Model.Comment", b =>
                {
                    b.HasOne("covrd.Model.Paper", null)
                        .WithMany("Comments")
                        .HasForeignKey("PaperId");
                });

            modelBuilder.Entity("covrd.Model.MetadataAuthor", b =>
                {
                    b.HasOne("covrd.Model.Affiliation", "Affiliation")
                        .WithMany()
                        .HasForeignKey("AffiliationId");

                    b.HasOne("covrd.Model.Bibref0", null)
                        .WithMany("Authors")
                        .HasForeignKey("Bibref0Id");

                    b.HasOne("covrd.Model.Metadata", null)
                        .WithMany("Authors")
                        .HasForeignKey("MetadataId");
                });

            modelBuilder.Entity("covrd.Model.Paper", b =>
                {
                    b.HasOne("covrd.Model.BibEntries", "BibEntries")
                        .WithMany()
                        .HasForeignKey("BibEntriesId");

                    b.HasOne("covrd.Model.Metadata", "Metadata")
                        .WithMany()
                        .HasForeignKey("MetadataId");

                    b.HasOne("covrd.Model.RefEntries", "RefEntries")
                        .WithMany()
                        .HasForeignKey("RefEntriesId");
                });

            modelBuilder.Entity("covrd.Model.RefEntries", b =>
                {
                    b.HasOne("covrd.Model.Ref0", "Figref0")
                        .WithMany()
                        .HasForeignKey("Figref0Ref0Id");

                    b.HasOne("covrd.Model.Ref0", "Figref10")
                        .WithMany()
                        .HasForeignKey("Figref10Ref0Id");

                    b.HasOne("covrd.Model.Ref0", "Figref1")
                        .WithMany()
                        .HasForeignKey("Figref1Ref0Id");

                    b.HasOne("covrd.Model.Ref0", "Figref2")
                        .WithMany()
                        .HasForeignKey("Figref2Ref0Id");

                    b.HasOne("covrd.Model.Ref0", "Figref3")
                        .WithMany()
                        .HasForeignKey("Figref3Ref0Id");

                    b.HasOne("covrd.Model.Ref0", "Figref4")
                        .WithMany()
                        .HasForeignKey("Figref4Ref0Id");

                    b.HasOne("covrd.Model.Ref0", "Figref5")
                        .WithMany()
                        .HasForeignKey("Figref5Ref0Id");

                    b.HasOne("covrd.Model.Ref0", "Figref6")
                        .WithMany()
                        .HasForeignKey("Figref6Ref0Id");

                    b.HasOne("covrd.Model.Ref0", "Figref7")
                        .WithMany()
                        .HasForeignKey("Figref7Ref0Id");

                    b.HasOne("covrd.Model.Ref0", "Figref8")
                        .WithMany()
                        .HasForeignKey("Figref8Ref0Id");

                    b.HasOne("covrd.Model.Ref0", "Figref9")
                        .WithMany()
                        .HasForeignKey("Figref9Ref0Id");

                    b.HasOne("covrd.Model.Ref0", "Tabref0")
                        .WithMany()
                        .HasForeignKey("Tabref0Ref0Id");

                    b.HasOne("covrd.Model.Ref0", "Tabref10")
                        .WithMany()
                        .HasForeignKey("Tabref10Ref0Id");

                    b.HasOne("covrd.Model.Ref0", "Tabref11")
                        .WithMany()
                        .HasForeignKey("Tabref11Ref0Id");

                    b.HasOne("covrd.Model.Ref0", "Tabref12")
                        .WithMany()
                        .HasForeignKey("Tabref12Ref0Id");

                    b.HasOne("covrd.Model.Ref0", "Tabref1")
                        .WithMany()
                        .HasForeignKey("Tabref1Ref0Id");

                    b.HasOne("covrd.Model.Ref0", "Tabref2")
                        .WithMany()
                        .HasForeignKey("Tabref2Ref0Id");

                    b.HasOne("covrd.Model.Ref0", "Tabref3")
                        .WithMany()
                        .HasForeignKey("Tabref3Ref0Id");

                    b.HasOne("covrd.Model.Ref0", "Tabref4")
                        .WithMany()
                        .HasForeignKey("Tabref4Ref0Id");

                    b.HasOne("covrd.Model.Ref0", "Tabref5")
                        .WithMany()
                        .HasForeignKey("Tabref5Ref0Id");

                    b.HasOne("covrd.Model.Ref0", "Tabref6")
                        .WithMany()
                        .HasForeignKey("Tabref6Ref0Id");

                    b.HasOne("covrd.Model.Ref0", "Tabref7")
                        .WithMany()
                        .HasForeignKey("Tabref7Ref0Id");

                    b.HasOne("covrd.Model.Ref0", "Tabref8")
                        .WithMany()
                        .HasForeignKey("Tabref8Ref0Id");

                    b.HasOne("covrd.Model.Ref0", "Tabref9")
                        .WithMany()
                        .HasForeignKey("Tabref9Ref0Id");
                });

            modelBuilder.Entity("covrd.Model.Span", b =>
                {
                    b.HasOne("covrd.Model.Abstract", null)
                        .WithMany("CiteSpans")
                        .HasForeignKey("AbstractId");

                    b.HasOne("covrd.Model.Abstract", null)
                        .WithMany("RefSpans")
                        .HasForeignKey("AbstractId1");
                });
#pragma warning restore 612, 618
        }
    }
}
